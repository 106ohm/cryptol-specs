module Types where


glob_t = 119
type t = 119
glob_n = 6960
type n = 6960
type m = 13
type d = 256
type mt = m*t

type byte_int_T = [1][8]f2_T
type byte_n_T = [n/8][8]f2_T
type byte_mt = (mt/8)+1
type byte_mt_T = [byte_mt][8]f2_T  // also n-k
type byte_d_T = [d/8][8]f2_T

type byte_k_T = (mt/8)+1

type hash1_in_T =  [n/8+1][8]f2_T 
type hash2_in_T =  [1+n/8+194+d/8][8]f2_T 
type hash1_T =  hash1_in_T -> d_T
type hash2_T =  hash2_in_T -> session_key_T


type k = (n-m*t) // 5413
// in order of general algorithm spec
type f2_T = Bit
type n_T = [n]f2_T
type k_T = [k]f2_T
type t_T = [t]f2_T
type m_T = [m]f2_T
type mt_T = [mt]f2_T  // also n-k
type public_key_T = [mt][k]f2_T
type H_T = [n-k][n]f2_T //unsure size
type d_T = [d]f2_T
type field_element_T = m_T
type poly_T =  [t]field_element_T
type alphas_T = [n]field_element_T
type gamma_T =
    { p : poly_T                // [13]Bit
    , a : alphas_T              // [6960][13]Bit  //[n][m]Bit
    }
type s_T  = n_T
type private_key_T =
    { s : n_T                   // [870][8]Bit
    , g : gamma_T
    }

type C0_T = mt_T // also n-k //1547
type C1_T = d_T
type cipher_text_T =
    { C0 : C0_T
    , C1 : C1_T}
type hash_input_T =
    { n : Integer
    , v : n_T
    , C : cipher_text_T}

// a bit string of length and Hamming weight T
type weighted_T = n_T
type e_T = n_T


type session_key_T = [32] //?
